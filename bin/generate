#!/bin/bash

# A script for generating `namespaces.yaml` and the associated LookML.
# This repository builds namespaces.yaml from Glean applications and
# `custom-namespaces.yaml`, and then generates files and LookML that
# match the specification in `namespaces.yaml` and table definitions
# in BigQuery. The resulting LookML is pushed to our `looker-hub`
# repository.
#
# Environment variables:
#   GIT_SSH_KEY_BASE64:   A base64-encoded ssh secret key with permissions to push
#                         to looker-hub and looker-spoke-default.
#   HUB_REPO_URL:         The URL to the looker-hub repository.
#                         Requires the SSH format, e.g. git@github.com:user/repo.git.
#   HUB_BRANCH_SOURCE:    The source branch for generating LookML.
#                         Defaults to 'base'. Files present the source
#                         branch will remain unchanged by generation.
#   HUB_BRANCH_PUBLISH:   The destination branch for publishing LookML.
#                         Defaults to 'test-lookml-generation'. If the
#                         branch doesn't exist, creates it from source.
#   SPOKE_REPO_URL:       The URL to the looker-spoke-default repository.
#                         Requires the SSH format, w.g. git@github.com:user/repo.git.
#   SPOKE_BRANCH_PUBLISH: The publish branch for the spoke project.
#                         We use this as source as well, since we
#                         don't want to overwrite files that are
#                         already published.
#   GCLOUD_SERVICE_KEY:   The service key used to authenticate with GCP.
#                         Needs to have read access to all tables specified
#                         in `namespaces.yaml`. Not required in local dev.
#
# Example usage:
#   export GIT_SSH_KEY_BASE64=$(cat ~/.ssh/id_rsa | base64)
#   make build && make run

HUB_REPO_URL=${HUB_REPO_URL:-"git@github.com:mozilla/looker-hub.git"}
HUB_BRANCH_SOURCE=${HUB_BRANCH_SOURCE:-"base"}
HUB_BRANCH_PUBLISH=${HUB_BRANCH_PUBLISH:-"test-lookml-generation"}
SPOKE_REPO_URL=${SPOKE_REPO_URL:-"git@github.com:mozilla/looker-spoke-default.git"}
SPOKE_BRANCH_PUBLISH=${SPOKE_BRANCH_PUBLISH:-"test-lookml-generation"}

function setup_gcloud_auth() {
  # Use credentials from environment
  # Google's client libraries will check for GOOGLE_APPLICATION_CREDENTIALS
  # and use a file in that location for credentials if present;
  # See https://cloud.google.com/docs/authentication/production
  if [ -n "$GCLOUD_SERVICE_KEY" ]; then
    export GOOGLE_APPLICATION_CREDENTIALS="${GOOGLE_APPLICATION_CREDENTIALS:-/tmp/gcp.json}"
    echo "$GCLOUD_SERVICE_KEY" > "$GOOGLE_APPLICATION_CREDENTIALS"
  fi
}

function setup_git_auth() {
    # Configure the container for pushing to github.

    if [[ -z "$GIT_SSH_KEY_BASE64" ]]; then
        echo "Missing secret key" 1>&2
        exit 1
    fi

    git config --global user.name "Generated LookML Creator"
    git config --global user.email "dataops+looker@mozilla.com"

    mkdir -p "$HOME/.ssh"

    echo "$GIT_SSH_KEY_BASE64" | base64 --decode > "$HOME"/.ssh/id_ed25519
    # Makes the future git-push non-interactive
    ssh-keyscan github.com > "$HOME"/.ssh/known_hosts

    chown -R "$(id -u):$(id -g)" "$HOME/.ssh"
    chmod 700 "$HOME/.ssh"
    chmod 700 "$HOME/.ssh/id_ed25519"

    # add private key to the ssh agent to prompt for password once
    eval "$(ssh-agent)"
    ssh-add
}

function setup_hub() {
    # Checkout looker-hub and changes directory to prepare for
    # LookML generation.
    pushd .

    cd /app
    [[ -d looker-hub ]] && rm -rf looker-hub
    git clone "$HUB_REPO_URL"
    cd looker-hub
    git fetch --all
    # If publish branch doesn't exist, create it from source
    git checkout "$HUB_BRANCH_PUBLISH" || git checkout "$HUB_BRANCH_SOURCE" && git checkout -b "$HUB_BRANCH_PUBLISH"
    git checkout "$HUB_BRANCH_SOURCE"

    popd
}

function setup_spoke() {
    # Checkout looker-spoke-default and changes directory to prepare for
    # LookML generation. Create publish branch if non-existent.
    pushd .

    cd /app
    [[ -d looker-spoke-default ]] && rm -rf looker-spoke-default
    git clone "$SPOKE_REPO_URL"
    cd looker-spoke-default
    git fetch --all
    git checkout "$SPOKE_BRANCH_PUBLISH" || git checkout main && git checkout -b "$SPOKE_BRANCH_PUBLISH"

    popd
}

function check_files_and_commit() {
  # Check that base branch files are unchanged. Error if they are.
  # Add the new files and commit.

  if ! git diff-index --quiet HEAD;
  then
    git diff-index HEAD | cut -f 2 | xargs -I % echo "Error: lookml-generator modified %"
    exit 1
  fi

  # Use interactive mode to add untracked files
  # This also works when it's untracked directories
  echo -e "a\n*\nq\n"|git add -i
  git commit -m "Auto-push from LookML generation" \
    || echo "Nothing to commit"
}

function generate_hub_commit() {
  # Generate commit on publish branch with
  # generated LookML.

  pushd .
  cd /app

  HUB_DIR="looker-hub"
  GENERATION_DISALLOW_LIST="/app/lookml-generator/GENERATION_DISALLOW_LIST"
  NAMESPACE_ALLOWLIST="/app/lookml-generator/namespace_allowlist.yaml"
  CUSTOM_NAMESPACES_FILENAME="/app/lookml-generator/custom-namespaces.yaml"
  GENERATED_SQL_URI="https://github.com/mozilla/bigquery-etl/archive/generated-sql.tar.gz"
  APP_LISTINGS_URI="https://probeinfo.telemetry.mozilla.org/v2/glean/app-listings"

  # Generate namespaces.yaml and LookML
  lookml-generator namespaces \
    --custom-namespaces $CUSTOM_NAMESPACES_FILENAME \
    --generated-sql-uri $GENERATED_SQL_URI \
    --app-listings-uri $APP_LISTINGS_URI \
    --allowlist $NAMESPACE_ALLOWLIST
  lookml-generator lookml \
    --namespaces "namespaces.yaml" \
    --target-dir $HUB_DIR

  cd $HUB_DIR

  # Keep files in GENERATION_DISALLOW_LIST unchanged.
  cat $GENERATION_DISALLOW_LIST | xargs -I % git checkout %

  check_files_and_commit

  # Checkout main. Match it with source branch.
  git checkout "$HUB_BRANCH_PUBLISH"
  find . -mindepth 1 -maxdepth 1 -not -name .git -exec rm -rf {} +
  git checkout "$HUB_BRANCH_SOURCE" -- *
  git commit --all \
    --message "Auto-push from LookML generation" \
    || echo "Nothing to commit"

  popd
}

function generate_spoke_commit() {
  # Generate commit on spoke publish branch
  # with generated LookML.

  pushd .
  cd /app

  SPOKE_DIR="looker-spoke-default"

  lookml-generator update-spoke \
    --namespaces "namespaces.yaml" \
    --spoke-dir $SPOKE_DIR

  cd $SPOKE_DIR

  check_files_and_commit

  popd
}

function main() {
  pushd .
  cd /app

  set +x  # don't print these commands
  setup_gcloud_auth
  setup_git_auth

  # Set up hub and commit
  set -x  # print these commands
  setup_hub
  generate_hub_commit

  # Publish hub
  cd /app/looker-hub
  git push || git push --set-upstream origin "$HUB_BRANCH_PUBLISH"

  # Set up spoke and commit
  setup_spoke
  generate_spoke_commit

  # Publish spoke
  cd /app/looker-spoke-default
  git push || git push --set-upstream origin "$SPOKE_BRANCH_PUBLISH"

  popd
}

main "$@"
